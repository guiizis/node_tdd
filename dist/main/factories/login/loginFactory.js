"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.makeLoginController = void 0;
const dbAuthentication_1 = require("../../../data/useCases/authentication/dbAuthentication");
const bCryptAdapter_1 = require("../../../infra/criptography/bcryptAdapter/bCryptAdapter");
const jwtAdapter_1 = require("../../../infra/criptography/jwtAdapter/jwtAdapter");
const accountMongoRepository_1 = require("../../../infra/db/mongodb/account/accountMongoRepository");
const logMongoRepository_1 = require("../../../infra/db/mongodb/log/logMongoRepository");
const loginController_1 = require("../../../presentation/controllers/login/loginController");
const env_1 = require("../../config/env");
const logControllerDecorator_1 = require("../../decorators/logControllerDecorator");
const loginValidationFactory_1 = require("./loginValidationFactory");
const makeLoginController = () => {
    const salt = 12;
    const jwtAdapter = new jwtAdapter_1.JwtAdapter(env_1.processEnv.jwtSecret);
    const bcryptAdapter = new bCryptAdapter_1.BcryptAdapter(salt);
    const accountMongoRepository = new accountMongoRepository_1.AccountMongoRepository();
    const dbAuthentication = new dbAuthentication_1.DbAuthentication(accountMongoRepository, bcryptAdapter, jwtAdapter, accountMongoRepository);
    const loginController = new loginController_1.LoginController((0, loginValidationFactory_1.makeLoginValidation)(), dbAuthentication);
    const logMongoRepository = new logMongoRepository_1.LogMongoRepository();
    return new logControllerDecorator_1.LogControllerDecorator(loginController, logMongoRepository);
};
exports.makeLoginController = makeLoginController;
